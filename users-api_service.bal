// AUTO-GENERATED FILE.
// This file is auto-generated by the Ballerina OpenAPI tool.

import ballerina/http;

listener http:Listener ep0 = new (8080, config = {host: "localhost"});

# Description.
table<User> key(User) allUsers = table [
 {username: "gerson33", firstname: "gerson", lastname: "eichab", email: "gersoneichab6@gmail.com"}, 
 {username: "tekashi69", firstname: "daniel", lastname: "fernandez", email: "six9ine@gmail.com"}, 
 {username: "seer7", firstname: "christiano", lastname: "ronaldo", email: "cronaldo7@gmail.com"}
  ];
  
    

type User record {
    
};

type Inline_response_201 record {|
    
|};

service /vle/api/v1 on ep0 {
    
    
    resource function get users() returns User[]|http:Response {
    return allUsers.toArray();
    }
    
    resource function post users(@http:Payload User payload) returns Inline_response_201|http:Response {
    allUsers.add(payload);
    http:Response userAdded =new;
    return userAdded;
    }
    
    resource function get users/[string username]() returns User|http:Response {
    User? user = allUsers[username];
        if user is () {
        http:Response userNotFound =new;
        return userNotFound;
        } else {
        return user;
    }
    }
    
    
    resource function put users/[string username](@http:Payload User payload) returns User|http:Response {
    allUsers.put(payload);
    http:Response userUpdated =new;
    return userUpdated;
    }
    
    resource function delete users/[string username]() returns http:NoContent|http:Response {
    User? deluser = allUsers[username];
        if deluser is () {
        http:Response userNotFound =new;
        return userNotFound;
        } else {
        deluser = allUsers.removeIfHasKey(username);
        http:Response userDeleted =new;
        return userDeleted;
    }
}
}
